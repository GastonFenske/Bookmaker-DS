@startuml

actor Cliente
boundary ApuestaController
participant ApuestaService
participant ApuestaRepositorio
participant PartidoSchema
participant ApuestaSchema
participant PartidoModel
participant ApuestaModel
database data

Cliente -> ApuestaController: GET by Id
activate ApuestaController
ApuestaController -> PartidoModel: get(id)
activate PartidoModel
PartidoModel -> data: select all
PartidoModel <- data: registro partidos 
PartidoSchema <- PartidoModel: dump
deactivate PartidoModel
activate PartidoSchema
PartidoSchema -> ApuestaRepositorio: collection Json
deactivate PartidoSchema
activate ApuestaRepositorio
ApuestaController <- ApuestaRepositorio: ApuestaModel
deactivate ApuestaRepositorio
Cliente <- ApuestaController: Json
deactivate ApuestaController

Cliente -> ApuestaController: POST
activate ApuestaController
ApuestaController -> ApuestaModel: agregar apuesta
activate ApuestaModel
ApuestaModel -> data: Insert
ApuestaModel <- data: Object
ApuestaSchema <- ApuestaModel: Dump Object
deactivate ApuestaModel
activate ApuestaSchema
ApuestaSchema -> ApuestaRepositorio: Json
deactivate ApuestaSchema
activate ApuestaRepositorio
ApuestaController <- ApuestaRepositorio: ApuestaModel
deactivate ApuestaRepositorio
Cliente <- ApuestaController: Json
deactivate ApuestaController

Cliente -> ApuestaController: GET all apuestas ganadas
activate ApuestaController
ApuestaController -> PartidoModel: get all partidos ganados
activate PartidoModel
PartidoModel -> data: select all
PartidoModel <- data: registro partidos 
PartidoSchema <- PartidoModel: dump many=True
deactivate PartidoModel
activate PartidoSchema
PartidoSchema -> ApuestaRepositorio: collection Json
deactivate PartidoSchema
activate ApuestaRepositorio
ApuestaController <- ApuestaRepositorio: ApuestaModel
deactivate ApuestaRepositorio
Cliente <- ApuestaController: Json
deactivate ApuestaController

@enduml

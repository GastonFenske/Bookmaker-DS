@startuml

actor Admin
boundary EquipoController
participant EquipoService
participant EquipoRepositorio
participant EquipoSchema
entity EquipoModel
database data

Admin -> EquipoController: GET by Id (Request)
activate EquipoController
EquipoController -> EquipoModel: get_or_404()
activate EquipoModel
EquipoModel -> data: query (SELECT)
EquipoModel <- data: Register
EquipoSchema <- EquipoModel: Objeto equipo
deactivate EquipoModel
activate EquipoSchema
EquipoRepositorio <- EquipoSchema: Json equipo
deactivate EquipoSchema
activate EquipoRepositorio
EquipoController <- EquipoRepositorio: EquipoModel
deactivate EquipoRepositorio
Admin <- EquipoController: json (Response)
deactivate EquipoController

Admin -> EquipoController: PUT by Id (Request)
activate EquipoController
EquipoController -> EquipoModel: get_or_404()
activate EquipoModel
EquipoModel -> data: query (SELECT)
EquipoModel <- data: Register
EquipoController <- EquipoModel: Object equipo
deactivate EquipoModel
EquipoController -> EquipoModel: Add
activate EquipoModel
EquipoController -> EquipoModel: Commit
EquipoModel -> data: UPDATE
EquipoModel <- data: Register
EquipoSchema <- EquipoModel: Object equipo
deactivate EquipoModel
activate EquipoSchema
EquipoController <- EquipoSchema: Json equipo
deactivate EquipoSchema
Admin <- EquipoController: json (Response)
deactivate EquipoController

Admin -> EquipoController: DELETE by Id (Request)
activate EquipoController
EquipoController-> EquipoModel: get_or_404()
activate EquipoModel
EquipoModel -> data: query (SELECT)
EquipoModel <- data: register
deactivate EquipoModel
EquipoController <- EquipoModel: delete
activate EquipoModel
EquipoController -> EquipoModel: Commit
EquipoModel -> data: DELETE
deactivate EquipoModel
Admin <- EquipoController: Request(Status OK)
deactivate EquipoController

@enduml